package com.mycompany.grades_encoding_system;

// // Import necessary for some swing and file read/write functions to work properly
import javax.swing.JOptionPane;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.*;
import javax.swing.table.DefaultTableModel;

// Main Class for Main Page
public class MainPage extends javax.swing.JFrame {

    public MainPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // Swing Components Declaration
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPageTabbedPane = new javax.swing.JTabbedPane();
        IGSPMainPanel = new javax.swing.JPanel();
        InputStudentGradePanel = new javax.swing.JPanel();
        ISGPTitleLabel = new javax.swing.JLabel();
        ISGPStudentNumberLabel = new javax.swing.JLabel();
        ISGPStudentNumberTextField = new javax.swing.JTextField();
        ISGPMathGradeLabel = new javax.swing.JLabel();
        ISGPScienceGradeLabel = new javax.swing.JLabel();
        ISGPFilipinoGradeLabel = new javax.swing.JLabel();
        ISGPEnglishGradeLabel = new javax.swing.JLabel();
        ISGPHistoryGradeLabel = new javax.swing.JLabel();
        ISGPMathGradeTextField = new javax.swing.JTextField();
        ISGPScienceGradeTextField = new javax.swing.JTextField();
        ISGPFilipinoGradeTextField = new javax.swing.JTextField();
        ISGPEnglishGradeTextField = new javax.swing.JTextField();
        ISGPHistoryGradeTextField = new javax.swing.JTextField();
        ISGPStudentLastNameLabel = new javax.swing.JLabel();
        ISGPStudentLastNameTextField = new javax.swing.JTextField();
        ISGPStudentFirstNameLabel = new javax.swing.JLabel();
        ISGPStudentFirstNameTextField = new javax.swing.JTextField();
        ISGPInputButton = new javax.swing.JButton();
        ISGPCancelButton = new javax.swing.JButton();
        ISGPLogOutButton = new javax.swing.JButton();
        RSMainPanel = new javax.swing.JPanel();
        RemoveStudentPanel = new javax.swing.JPanel();
        RSPTitleLabel = new javax.swing.JLabel();
        RVPStudentNumberLabel = new javax.swing.JLabel();
        RSPStudentNumberTextField = new javax.swing.JTextField();
        ConfirmRemoveStudentButton = new javax.swing.JButton();
        CancelRemoveStudentButton = new javax.swing.JButton();
        RSLogOutButton = new javax.swing.JButton();
        VGMainPanel = new javax.swing.JPanel();
        ViewGradeScrollPane = new javax.swing.JScrollPane();
        ViewGradeTable = new javax.swing.JTable();
        VGDisplayGradeButton = new javax.swing.JButton();
        VGLogOutButton = new javax.swing.JButton();
        VGExportGradesButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainPageTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainPageTabbedPaneMouseClicked(evt);
            }
        });

        InputStudentGradePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ISGPTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        ISGPTitleLabel.setText("Input Student Grades");

        ISGPStudentNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPStudentNumberLabel.setText("Student Number:");

        ISGPStudentNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPStudentNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPStudentNumberTextFieldKeyTyped(evt);
            }
        });

        ISGPMathGradeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPMathGradeLabel.setText("Math:");

        ISGPScienceGradeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPScienceGradeLabel.setText("Science:");

        ISGPFilipinoGradeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPFilipinoGradeLabel.setText("Filipino:");

        ISGPEnglishGradeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPEnglishGradeLabel.setText("English:");

        ISGPHistoryGradeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPHistoryGradeLabel.setText("History:");

        ISGPMathGradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPMathGradeTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPMathGradeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPMathGradeTextFieldKeyTyped(evt);
            }
        });

        ISGPScienceGradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPScienceGradeTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPScienceGradeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPScienceGradeTextFieldKeyTyped(evt);
            }
        });

        ISGPFilipinoGradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPFilipinoGradeTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPFilipinoGradeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPFilipinoGradeTextFieldKeyTyped(evt);
            }
        });

        ISGPEnglishGradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPEnglishGradeTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPEnglishGradeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPEnglishGradeTextFieldKeyTyped(evt);
            }
        });

        ISGPHistoryGradeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPHistoryGradeTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPHistoryGradeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPHistoryGradeTextFieldKeyTyped(evt);
            }
        });

        ISGPStudentLastNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPStudentLastNameLabel.setText("Student Last Name:");

        ISGPStudentLastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPStudentLastNameTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPStudentLastNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPStudentLastNameTextFieldKeyTyped(evt);
            }
        });

        ISGPStudentFirstNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ISGPStudentFirstNameLabel.setText("Student First Name:");

        ISGPStudentFirstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPStudentFirstNameTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        ISGPStudentFirstNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISGPStudentFirstNameTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout InputStudentGradePanelLayout = new javax.swing.GroupLayout(InputStudentGradePanel);
        InputStudentGradePanel.setLayout(InputStudentGradePanelLayout);
        InputStudentGradePanelLayout.setHorizontalGroup(
            InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputStudentGradePanelLayout.createSequentialGroup()
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputStudentGradePanelLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(ISGPTitleLabel))
                    .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(InputStudentGradePanelLayout.createSequentialGroup()
                            .addGap(95, 95, 95)
                            .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ISGPStudentNumberLabel)
                                .addGroup(InputStudentGradePanelLayout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(ISGPEnglishGradeLabel)
                                        .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ISGPScienceGradeLabel)
                                            .addComponent(ISGPMathGradeLabel)
                                            .addComponent(ISGPFilipinoGradeLabel))
                                        .addComponent(ISGPHistoryGradeLabel)))
                                .addComponent(ISGPStudentLastNameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(ISGPHistoryGradeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ISGPEnglishGradeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ISGPFilipinoGradeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ISGPScienceGradeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ISGPMathGradeTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ISGPStudentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ISGPStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputStudentGradePanelLayout.createSequentialGroup()
                            .addGap(94, 94, 94)
                            .addComponent(ISGPStudentFirstNameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ISGPStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        InputStudentGradePanelLayout.setVerticalGroup(
            InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputStudentGradePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(ISGPTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPStudentFirstNameLabel)
                    .addComponent(ISGPStudentFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPStudentLastNameLabel)
                    .addComponent(ISGPStudentLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPStudentNumberLabel)
                    .addComponent(ISGPStudentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPMathGradeLabel)
                    .addComponent(ISGPMathGradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPScienceGradeLabel)
                    .addComponent(ISGPScienceGradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPFilipinoGradeLabel)
                    .addComponent(ISGPFilipinoGradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPEnglishGradeLabel)
                    .addComponent(ISGPEnglishGradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputStudentGradePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISGPHistoryGradeLabel)
                    .addComponent(ISGPHistoryGradeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ISGPInputButton.setText("Input");
        ISGPInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPInputButtonConfirmAddStudentButton1ActionPerformed(evt);
            }
        });

        ISGPCancelButton.setText("Cancel");
        ISGPCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPCancelButtonConfirmAddStudentButton1ActionPerformed(evt);
            }
        });

        ISGPLogOutButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ISGPLogOutButton.setText("Logout");
        ISGPLogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISGPLogOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IGSPMainPanelLayout = new javax.swing.GroupLayout(IGSPMainPanel);
        IGSPMainPanel.setLayout(IGSPMainPanelLayout);
        IGSPMainPanelLayout.setHorizontalGroup(
            IGSPMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IGSPMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IGSPMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ISGPLogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISGPCancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ISGPInputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputStudentGradePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(314, Short.MAX_VALUE))
        );
        IGSPMainPanelLayout.setVerticalGroup(
            IGSPMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IGSPMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IGSPMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(IGSPMainPanelLayout.createSequentialGroup()
                        .addComponent(InputStudentGradePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(IGSPMainPanelLayout.createSequentialGroup()
                        .addComponent(ISGPInputButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ISGPCancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ISGPLogOutButton)
                        .addGap(148, 148, 148))))
        );

        MainPageTabbedPane.addTab("Input Grades", IGSPMainPanel);

        RemoveStudentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        RSPTitleLabel.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        RSPTitleLabel.setText("Remove Students");

        RVPStudentNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        RVPStudentNumberLabel.setText("Student Number:");

        RSPStudentNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RSPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed(evt);
            }
        });
        RSPStudentNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RSPStudentNumberTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout RemoveStudentPanelLayout = new javax.swing.GroupLayout(RemoveStudentPanel);
        RemoveStudentPanel.setLayout(RemoveStudentPanelLayout);
        RemoveStudentPanelLayout.setHorizontalGroup(
            RemoveStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RemoveStudentPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RVPStudentNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RSPStudentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(RemoveStudentPanelLayout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(RSPTitleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RemoveStudentPanelLayout.setVerticalGroup(
            RemoveStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveStudentPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(RSPTitleLabel)
                .addGap(18, 18, 18)
                .addGroup(RemoveStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RVPStudentNumberLabel)
                    .addComponent(RSPStudentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ConfirmRemoveStudentButton.setText("Remove");
        ConfirmRemoveStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmRemoveStudentButtonConfirmAddStudentButtonActionPerformed(evt);
            }
        });

        CancelRemoveStudentButton.setText("Cancel");
        CancelRemoveStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelRemoveStudentButtonConfirmAddStudentButton1ActionPerformed(evt);
            }
        });

        RSLogOutButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RSLogOutButton.setText("Logout");
        RSLogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RSLogOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RSMainPanelLayout = new javax.swing.GroupLayout(RSMainPanel);
        RSMainPanel.setLayout(RSMainPanelLayout);
        RSMainPanelLayout.setHorizontalGroup(
            RSMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RSMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RSMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConfirmRemoveStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CancelRemoveStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RSLogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemoveStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(305, 305, 305))
        );
        RSMainPanelLayout.setVerticalGroup(
            RSMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RSMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RSMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RSMainPanelLayout.createSequentialGroup()
                        .addComponent(RemoveStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(RSMainPanelLayout.createSequentialGroup()
                        .addComponent(ConfirmRemoveStudentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CancelRemoveStudentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RSLogOutButton)
                        .addGap(143, 143, 143))))
        );

        MainPageTabbedPane.addTab("Remove Students", RSMainPanel);

        ViewGradeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Names", "Student No.", "Math", "Science", "Filipino", "English", "History", "Average"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ViewGradeScrollPane.setViewportView(ViewGradeTable);

        VGDisplayGradeButton.setText("Display Grades");
        VGDisplayGradeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VGDisplayGradeButtonActionPerformed(evt);
            }
        });

        VGLogOutButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        VGLogOutButton.setText("Logout");
        VGLogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VGLogOutButtonActionPerformed(evt);
            }
        });

        VGExportGradesButton.setText("Export Grades");
        VGExportGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VGExportGradesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VGMainPanelLayout = new javax.swing.GroupLayout(VGMainPanel);
        VGMainPanel.setLayout(VGMainPanelLayout);
        VGMainPanelLayout.setHorizontalGroup(
            VGMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VGMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VGMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VGLogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VGDisplayGradeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VGExportGradesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewGradeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        VGMainPanelLayout.setVerticalGroup(
            VGMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VGMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VGMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VGMainPanelLayout.createSequentialGroup()
                        .addComponent(ViewGradeScrollPane)
                        .addContainerGap())
                    .addGroup(VGMainPanelLayout.createSequentialGroup()
                        .addComponent(VGDisplayGradeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VGExportGradesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(VGLogOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))))
        );

        MainPageTabbedPane.addTab("View Grades", VGMainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPageTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPageTabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MainPageTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainPageTabbedPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_MainPageTabbedPaneMouseClicked

    private void VGLogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VGLogOutButtonActionPerformed
        // Redirect to Login Page
        LoginPage loginPage = new LoginPage();
        loginPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_VGLogOutButtonActionPerformed

    private void VGDisplayGradeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VGDisplayGradeButtonActionPerformed
        // get model for View Grade Table
        DefaultTableModel model = (DefaultTableModel) ViewGradeTable.getModel();
        
        // Remove All Rows to Avoid Duplication
        model.setRowCount(0);
        
        
        // Read each line in file
        try (BufferedReader reader = new BufferedReader(new FileReader("StudInfo.txt"))){
            String line;
            while((line = reader.readLine()) != null){
                // Split line in "," to get individual values
                String[] StudInfo = line.split(",");
                
                // Add Row to table - Each Column corresponds to the value in the string array StudInfo
                model.addRow(new Object[]{StudInfo[0].trim(), StudInfo[1].trim(), StudInfo[2].trim(), StudInfo[3].trim(),
                    StudInfo[4].trim(), StudInfo[5].trim(), StudInfo[6].trim(), StudInfo[7].trim()});

        }
        } catch (IOException e) {
            // Catch any Error - Show Error To User
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error reading the file: " + e.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_VGDisplayGradeButtonActionPerformed

    private void CancelRemoveStudentButtonConfirmAddStudentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelRemoveStudentButtonConfirmAddStudentButton1ActionPerformed
        // Clear Input in Student Number Textfield
        RSPStudentNumberTextField.setText("");
    }//GEN-LAST:event_CancelRemoveStudentButtonConfirmAddStudentButton1ActionPerformed

    private void ConfirmRemoveStudentButtonConfirmAddStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmRemoveStudentButtonConfirmAddStudentButtonActionPerformed
        // Get Student Number for Removing Student
        String studNum = RSPStudentNumberTextField.getText();
        
        // Check if the user confirms that the student is to be deleted
        boolean isConfirm = confirmDel();
        
        // Check if input is blank or empty - show error if empty or blank
        if(studNum.isBlank() && studNum.isEmpty()){
            JOptionPane.showMessageDialog(null, "Invalid Student Number!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if(isConfirm){
            // Remove Student from records if confirmed
            removeStud(studNum);
        }
    }//GEN-LAST:event_ConfirmRemoveStudentButtonConfirmAddStudentButtonActionPerformed

    private void RSPStudentNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RSPStudentNumberTextFieldKeyTyped
        // Get each character inputted in the Student Number Text Field
        // If character is not a digit prevent input
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_RSPStudentNumberTextFieldKeyTyped

    private void RSPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RSPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RSPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPStudentFirstNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPStudentFirstNameTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPStudentFirstNameTextFieldKeyTyped

    private void ISGPStudentFirstNameTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPStudentFirstNameTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPStudentFirstNameTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPStudentLastNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPStudentLastNameTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPStudentLastNameTextFieldKeyTyped

    private void ISGPStudentLastNameTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPStudentLastNameTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPStudentLastNameTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPCancelButtonConfirmAddStudentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPCancelButtonConfirmAddStudentButton1ActionPerformed
        // Clear Input in Input Grades Panel Text Fields
        ISGPStudentFirstNameTextField.setText("");
        ISGPStudentLastNameTextField.setText("");
        ISGPStudentNumberTextField.setText("");
        ISGPMathGradeTextField.setText("");
        ISGPScienceGradeTextField.setText("");
        ISGPFilipinoGradeTextField.setText("");
        ISGPEnglishGradeTextField.setText("");
        ISGPHistoryGradeTextField.setText("");
    }//GEN-LAST:event_ISGPCancelButtonConfirmAddStudentButton1ActionPerformed

    private void ISGPHistoryGradeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPHistoryGradeTextFieldKeyTyped
        // This is to ensure that input can be converted to float later on for grades average computation
        // Get Each Character Typed
        char c = evt.getKeyChar();
        
        // If character is decimal add 1 to decimalCountHistory
        if(c == '.'){
            decimalCountHistory++;
        }
        
        // If character is not a digit and decimal count is more than two then prevent input
        if(!Character.isDigit(c) && !(decimalCountHistory<2)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPHistoryGradeTextFieldKeyTyped

    private void ISGPHistoryGradeTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPHistoryGradeTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPHistoryGradeTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPEnglishGradeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPEnglishGradeTextFieldKeyTyped
        // This is to ensure that input can be converted to float later on for average computation
        // Get Each Character Typed
        char c = evt.getKeyChar();
        
        // If character is decimal add 1 to decimalCountEnglish
        if(c == '.'){
            decimalCountEnglish++;
        }
        
        // If character is not a digit and decimal count is more than two then prevent input
        if(!Character.isDigit(c) && !(decimalCountEnglish<2)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPEnglishGradeTextFieldKeyTyped

    private void ISGPEnglishGradeTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPEnglishGradeTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPEnglishGradeTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPFilipinoGradeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPFilipinoGradeTextFieldKeyTyped
        // This is to ensure that input can be converted to float later on for average computation
        // Get Each Character Typed
        char c = evt.getKeyChar();

        // If character is decimal add 1 to decimalCountFilipino
        if(c == '.'){
            decimalCountFilipino++;
        }

        // If character is not a digit and decimal count is more than two then prevent input
        if(!Character.isDigit(c) && !(decimalCountFilipino<2)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPFilipinoGradeTextFieldKeyTyped

    private void ISGPFilipinoGradeTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPFilipinoGradeTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPFilipinoGradeTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPScienceGradeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPScienceGradeTextFieldKeyTyped
        // This is to ensure that input can be converted to float later on for average computation
        // Get Each Character Typed
        char c = evt.getKeyChar();
        
        // If character is decimal add 1 to decimalCountScience
        if(c == '.'){
            decimalCountScience++;
        }

        // If character is not a digit and decimal count is more than two then prevent input
        if(!Character.isDigit(c) && !(decimalCountScience<2)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPScienceGradeTextFieldKeyTyped

    private void ISGPScienceGradeTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPScienceGradeTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPScienceGradeTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPMathGradeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPMathGradeTextFieldKeyTyped
        // This is to ensure that input can be converted to float later on for average computation
        // Get Each Character Typed
        char c = evt.getKeyChar();
        
        // If character is decimal add 1 to decimalCountMath
        if(c == '.'){
            decimalCountMath++;
        }
        
        // If character is not a digit and decimal count is more than two then prevent input
        if(!Character.isDigit(c) && !(decimalCountMath<2)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPMathGradeTextFieldKeyTyped

    private void ISGPMathGradeTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPMathGradeTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPMathGradeTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPInputButtonConfirmAddStudentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPInputButtonConfirmAddStudentButton1ActionPerformed
        // Get Text Fields Input in Input Student Grades Panel
        String fName = ISGPStudentFirstNameTextField.getText();
        String lName = ISGPStudentLastNameTextField.getText();
        String studNum = ISGPStudentNumberTextField.getText();
        String mathGr = ISGPMathGradeTextField.getText();
        String scienceGr = ISGPScienceGradeTextField.getText();
        String filipinoGr = ISGPFilipinoGradeTextField.getText();
        String englishGr = ISGPEnglishGradeTextField.getText();
        String historyGr = ISGPHistoryGradeTextField.getText();
        
        // Get Average by Converting each string grades to float - then get its sum - then divide by the total number of subjects
        float ave = (Float.parseFloat(mathGr) + Float.parseFloat(scienceGr) + Float.parseFloat(filipinoGr)
            + Float.parseFloat(englishGr) + Float.parseFloat(historyGr))/5;
        // Convert Average Float to String
        String averageGr = Float.toString(ave);
        
        // Check if Student Number is already existent in the file
        boolean isTaken = checkCredentials(studNum);
        
        // If any of the input is empty or the studnet no. is taken - then show error to user
        if(isAnyEmpty(fName, lName, studNum, mathGr, scienceGr, filipinoGr, englishGr, historyGr) || isTaken){
            JOptionPane.showMessageDialog(null, "Username is Either Taken or Invalid", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            // Save all inputs to Student Info File
            inputStudent(fName, lName, studNum, mathGr, scienceGr, filipinoGr, englishGr, historyGr, averageGr);
        }
    }//GEN-LAST:event_ISGPInputButtonConfirmAddStudentButton1ActionPerformed

    private void ISGPStudentNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISGPStudentNumberTextFieldKeyTyped
        // Get Indiv Character Input
        char c = evt.getKeyChar();
        
        // If character is not a digit prevent input
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_ISGPStudentNumberTextFieldKeyTyped

    private void ISGPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISGPStudentNumberTextFieldASPStudentNumberTextFieldActionPerformed

    private void ISGPLogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISGPLogOutButtonActionPerformed
        // Redirect to Login Page
        LoginPage loginPage = new LoginPage();
        loginPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ISGPLogOutButtonActionPerformed

    private void RSLogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RSLogOutButtonActionPerformed
        // Redirect to Login Page
        LoginPage loginPage = new LoginPage();
        loginPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_RSLogOutButtonActionPerformed

    private void VGExportGradesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VGExportGradesButtonActionPerformed
        // Read Each Line in Student Info File - Write Each Line to Student Records File for export
        try (BufferedReader reader = new BufferedReader(new FileReader("StudInfo.txt"));
             PrintWriter writer = new PrintWriter(new FileWriter("Student_Records.txt", true))){
                String line;
                while((line = reader.readLine()) != null){
                    // Split each line in ","
                    String[] StudInfo = line.split(",");
                    // Write each value to a line in Student Records File (user print format to write it in file)
                    writer.printf("Student Name: %s, Student No.: %s, Math: %s, Science: %s, Filipino: %s, English: %s, History: %s, Average: %s%n", 
                            StudInfo[0].trim(), StudInfo[1].trim(), StudInfo[2].trim(), StudInfo[3].trim(),
                            StudInfo[4].trim(), StudInfo[5].trim(), StudInfo[6].trim(), StudInfo[7].trim());
                    // Show success to user
                    JOptionPane.showMessageDialog(null, "Successfully Exported Grades to \"Student_Records.txt\" file");
                }
            } catch (IOException e) {
                // Show error to user
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error reading the file: " + e.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
            }
        
    }//GEN-LAST:event_VGExportGradesButtonActionPerformed
           
    private boolean isAnyEmpty(String... values) {
        // Checks each string input in the array if any is blank or null
        for (String value : values) {
            if (value == null || value.isBlank()) {
                // Return true if yes
                return true; 
            }
        }
        // Return False if no
        return false;
    }

    private boolean checkCredentials(String studNum) {
        // Read each line in Stud Info File 
        try (BufferedReader reader = new BufferedReader(new FileReader("StudInfo.txt"))) {
            String line;
            while((line = reader.readLine()) != null) {
                // If file contains the studnum return true
                if (line.contains(studNum)) {
                    return true;
                }
            }
        } catch (IOException e) {
        }
        // Return false if not found
        return false;
    }
    
    private void inputStudent(String fName, String lName, String studNum, String mathGr,
                              String scienceGr, String filipinoGr, String englishGr, String historyGr, String averageGr) {
        // Combine First and Last Name
        String name = fName + " " + lName;
        
        // Save the user inputs to file (uses printwriter for easier formatting)
        try (PrintWriter writer = new PrintWriter(new FileWriter("StudInfo.txt", true))) {
            writer.printf("%s,%s,%s,%s,%s,%s,%s,%s%n", 
            name, studNum, mathGr, scienceGr, filipinoGr, englishGr, historyGr, averageGr);
            // Show Success to User
            JOptionPane.showMessageDialog(null, "Successfully Added Student!");
        } catch (IOException e) {
            // Show Error To User
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error saving Student Information.");
        }
        
    }
    
    private void removeStud(String studNum){
        // For Student Removal
        // Read StudInfo File for the Student Record to be deleted
        // Write each line, except for the line that contains the student to be deleted, of StudInfo File to a temporary file
        // This enables us to essentially delete a student record
        File originalFile = new File("StudInfo.txt");
        File tempFile = new File("TempStudInfo.txt");
        
        try (BufferedReader reader = new BufferedReader(new FileReader(originalFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {
            
            String line;
            boolean found = false;

            while ((line = reader.readLine()) != null) {
                if (line.contains(studNum)) {
                    // If line contains the StudNum then mark as found
                    found = true; 
                    // Skip the line in writing to the temp file
                    continue; 
                }
                // Write the line to the temporary file, except that which contains the student number
                writer.write(line);
                writer.newLine();
            }

            if (found) {
                // If studNum is found delete orig file and rename temp file to orig file name, basically replacing it
                if (originalFile.delete()) {
                    tempFile.renameTo(originalFile);
                    // Show Success to User
                    JOptionPane.showMessageDialog(null, "Student Record Deleted Successfully.");
                } else {
                    // Show File Deletion Error to User
                    System.out.print(originalFile.delete());
                    JOptionPane.showMessageDialog(null, "Orignal File Deletion Failed", "Warning", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                // Show studNum not found to user
                JOptionPane.showMessageDialog(null, "Student No.: " + studNum + " Not Found in Records");
                // Delete temp file since studNum is not found
                tempFile.delete();
            }

        } catch (IOException e) {
            // Show Error in Deletion to user
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "An error occurred while deleting the student record.");
        }
    }
    
    private boolean confirmDel(){
         // Ask User to Confirm if they will delete the student record or not
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this item?", "Confirm Deletion", 
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        // Check if they will delete it or not
        switch (response) {
            case JOptionPane.YES_OPTION -> {
                // If yes return true
                return true;
            }
            case JOptionPane.NO_OPTION -> {
                // if no return false
                return false;
            }
            default -> {
                // if user exited the JOptionPane or wasn't able to choose then return false
                return false;
            }
        }
    }
    
    // Declaration for decimal counts in each subject grades in the text fields of Input Student Grades Panel
    private int decimalCountMath = 0;
    private int decimalCountScience = 0;    
    private int decimalCountFilipino = 0;
    private int decimalCountEnglish = 0;
    private int decimalCountHistory = 0;  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelRemoveStudentButton;
    private javax.swing.JButton ConfirmRemoveStudentButton;
    private javax.swing.JPanel IGSPMainPanel;
    private javax.swing.JButton ISGPCancelButton;
    private javax.swing.JLabel ISGPEnglishGradeLabel;
    private javax.swing.JTextField ISGPEnglishGradeTextField;
    private javax.swing.JLabel ISGPFilipinoGradeLabel;
    private javax.swing.JTextField ISGPFilipinoGradeTextField;
    private javax.swing.JLabel ISGPHistoryGradeLabel;
    private javax.swing.JTextField ISGPHistoryGradeTextField;
    private javax.swing.JButton ISGPInputButton;
    private javax.swing.JButton ISGPLogOutButton;
    private javax.swing.JLabel ISGPMathGradeLabel;
    private javax.swing.JTextField ISGPMathGradeTextField;
    private javax.swing.JLabel ISGPScienceGradeLabel;
    private javax.swing.JTextField ISGPScienceGradeTextField;
    private javax.swing.JLabel ISGPStudentFirstNameLabel;
    private javax.swing.JTextField ISGPStudentFirstNameTextField;
    private javax.swing.JLabel ISGPStudentLastNameLabel;
    private javax.swing.JTextField ISGPStudentLastNameTextField;
    private javax.swing.JLabel ISGPStudentNumberLabel;
    private javax.swing.JTextField ISGPStudentNumberTextField;
    private javax.swing.JLabel ISGPTitleLabel;
    private javax.swing.JPanel InputStudentGradePanel;
    private javax.swing.JTabbedPane MainPageTabbedPane;
    private javax.swing.JButton RSLogOutButton;
    private javax.swing.JPanel RSMainPanel;
    private javax.swing.JTextField RSPStudentNumberTextField;
    private javax.swing.JLabel RSPTitleLabel;
    private javax.swing.JLabel RVPStudentNumberLabel;
    private javax.swing.JPanel RemoveStudentPanel;
    private javax.swing.JButton VGDisplayGradeButton;
    private javax.swing.JButton VGExportGradesButton;
    private javax.swing.JButton VGLogOutButton;
    private javax.swing.JPanel VGMainPanel;
    private javax.swing.JScrollPane ViewGradeScrollPane;
    private javax.swing.JTable ViewGradeTable;
    // End of variables declaration//GEN-END:variables
}
